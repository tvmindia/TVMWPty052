@model PartyEC.UI.Models.AttributesViewModel

@{
    ViewBag.Title = "Attributes";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.Render("~/Content/datatable")

}
<div class="container-fluid">
    <div class="panel with-nav-tabs panel-primary">
        <div class="panel-heading">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#attibutesList" id="tabattibutesList"  data-toggle="tab">Attibutes List</a></li>
                <li><a href="#attributeDetails" id="tabattributeDetails" data-toggle="tab">Attribute Details</a></li>
            </ul>
        </div>
        <div class="panel-body">
            <div class="tab-content">
                <div class="tab-pane fade in active" id="attibutesList">
                    <div class="" id="btnPatchAttributestab1">
                        @{
                            PartyEC.UI.Models.ToolboxViewModel ToolBoxControltab1 = new PartyEC.UI.Models.ToolboxViewModel();
                            ToolBoxControltab1.addbtn.Visible = true;                          
                            ToolBoxControltab1.addbtn.Event = "btnAddNew()";
                            Html.RenderPartial("_ToolboxView", ToolBoxControltab1);
                        }
                    </div> 
                    <h4>   Attributes List </h4>                   
                    @*table*@
                    <table id="tblattributes" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>Attribute ID</th>
                                <th>Attribute Name</th>
                                <th>Attribute Caption</th>
                                <th>Data Type</th>
                                <th>Attribute Type</th>
                                <th>Use for Filter</th>
                                <th>Configurable Values</th>
                                <th>Applicable To</th>
                                <th>Is Mandatory</th>
                                <th>Is Comparable</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                    @*table*@
                </div>
                <div class="tab-pane fade" id="attributeDetails">
                    <div class="" id="btnPatchAttributestab2">
                        @{
                            PartyEC.UI.Models.ToolboxViewModel ToolBoxControltab2 = new PartyEC.UI.Models.ToolboxViewModel();
                            ToolBoxControltab2.deletebtn.Visible = true;
                            ToolBoxControltab2.resetbtn.Visible = true;
                            ToolBoxControltab2.savebtn.Visible = true;
                            ToolBoxControltab2.backbtn.Visible = true;
                            ToolBoxControltab2.deletebtn.Event = "clickdelete()";
                            ToolBoxControltab2.resetbtn.Event = "btnreset()";
                            ToolBoxControltab2.savebtn.Event = "clicksave()";
                            ToolBoxControltab2.backbtn.Event = "goback()";
                            Html.RenderPartial("_ToolboxView", ToolBoxControltab2);
                        }
                    </div> 
                    <h4>Attributes Details</h4>
                    <div class="col-md-12" id="InsertAttribute">
                        <div class="col-md-2">
                            @* left hand side Tab  *@
                            <div class="panel with-nav-tabs js panel-primary">
                                <div class="panel-heading" style="min-height:300px">
                                    <ul class="nav nav-tabs nav-stacked">
                                        <li class="active"><a id="tabGeneral">General</a></li>                                       
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 ">                            
                            @using (Ajax.BeginForm("InsertUpdateAttributes", "Attributes", new AjaxOptions { HttpMethod = "POST", Confirm = "attributeSaveConfirm", OnSuccess = "attributeSaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form",id="formIns_Up" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @*<input type="hidden" id="ID" value="0" name="hiddenId" />*@
                                        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4",Value = "0" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ConfigurableYN, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.RadioButtonFor(model => model.ConfigurableYN, true, new { id = "married-true" , @onchange = "ConfigurableOnChange()" }) Configurable
                                            @Html.RadioButtonFor(model => model.ConfigurableYN, false, new { id = "married-false", @onchange = "SimpleOnChange()" }) Simple
                                            @Html.ValidationMessageFor(model => model.ConfigurableYN, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AttributeType, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @{
                                                List<SelectListItem> listAttributeType = new List<SelectListItem>();
                                                listAttributeType.Add(new SelectListItem
                                                { Text = "Combo", Value = "C" });
                                                listAttributeType.Add(new SelectListItem
                                                { Text = "Text", Value = "S" });
                                                listAttributeType.Add(new SelectListItem
                                                { Text = "Date", Value = "D" });
                                                listAttributeType.Add(new SelectListItem
                                                { Text = "Number", Value = "N" });
                                            }
                                            @Html.DropDownListFor(model => model.AttributeType, listAttributeType, "-- Select Data Type --", new { @class = "form-control", @onchange = "DataTypeOnChange()" })
                                            @Html.ValidationMessageFor(model => model.AttributeType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                  

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FilterYN, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @*<div class="checkbox col-md-8">*@
                                            @Html.EditorFor(model => model.FilterYN)
                                            @Html.ValidationMessageFor(model => model.FilterYN, "", new { @class = "text-danger" })
                                            @*</div>*@
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CSValues, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.CSValues, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CSValues, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EntityType, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @{
                                                List<SelectListItem> listItems = new List<SelectListItem>();
                                                listItems.Add(new SelectListItem
                                                {   Text = "Product",Value = "Product"});
                                                listItems.Add(new SelectListItem
                                                {   Text = "Order",Value = "Order"});
                                                listItems.Add(new SelectListItem
                                                {   Text = "Rating",Value = "Rating"});
                                            }
                                            @Html.DropDownListFor(model => model.EntityType, listItems, "-- Select Entity Type --", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EntityType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>  
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.MandatoryYN, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">                                             
                                                @Html.EditorFor(model => model.MandatoryYN)
                                                @Html.ValidationMessageFor(model => model.MandatoryYN, "", new { @class = "text-danger" })                                           
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ComparableYN, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">                                             
                                                @Html.EditorFor(model => model.ComparableYN)
                                                @Html.ValidationMessageFor(model => model.ComparableYN, "", new { @class = "text-danger" })                                            
                                        </div>
                                    </div>
                            @* Button create div is hidden here Click Event called from Button Patch Above *@
                                    <div class="form-group" hidden="hidden">
                                        <div class="col-md-offset-4 col-md-10">
                                            <input id="btnFormSave" type="submit" value="Create" class="btn btn-default" />
                                        </div>
                                    </div>
                                </div>                                                }
                        </div>
                        <div class="col-md-4">
                            @* Right hand side Space  *@                            
                        </div>
                    </div>
                </div>
                  
                <div id="attributedelete" hidden="hidden" >
                   @using (Ajax.BeginForm("DeleteAttributes", "Attributes", new AjaxOptions { HttpMethod = "POST", Confirm ="attributeDeleteConfirm", OnSuccess = "attributeDeleteSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
                   {
                        @Html.AntiForgeryToken()
                        <div class="form-actions no-color">
                            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0",id="deleteId" })
                            <input id="btnFormDelete" type="submit" value="Delete" class="btn btn-default" />                            
                        </div>
                    }
                </div>
                

            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.Render("~/bundles/attributes")
}

