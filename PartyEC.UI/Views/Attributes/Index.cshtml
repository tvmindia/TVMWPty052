@model PartyEC.UI.Models.AttributesViewModel

@{
    ViewBag.Title = "Attributes";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.Render("~/Content/datatable")

}
<div class="container-fluid">
    <div class="panel with-nav-tabs panel-primary">
        <div class="panel-heading">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tabAttibutesList" data-toggle="tab">Attibutes List</a></li>
                <li><a href="#tabAttributeDetails" data-toggle="tab">Attribute Details</a></li>
            </ul>
        </div>
        <div class="panel-body">
            <div class="tab-content">
                <div class="tab-pane fade in active" id="tabAttibutesList">
                    @*table*@
                    <table id="tblproducts" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Caption</th>
                                <th>Attribute Type</th>
                                <th>Filter</th>
                                <th>Configurable Values</th>
                                <th>Entity Type</th>
                                <th>Mandatory</th>
                                <th>Comparable</th>
                                <th>Edit</th> 
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Caption</th>
                                <th>Attribute Type</th>
                                <th>Filter</th>
                                <th>Configurable Values</th>
                                <th>Entity Type</th>
                                <th>Mandatory</th>
                                <th>Comparable</th>
                                <th>Edit</th> 
                            </tr>
                        </tfoot>
                    </table>
                    @*table*@
                </div>
                <div class="tab-pane fade" id="tabAttributeDetails">
                    @*ButtonPatch Save*@
                    <div class="col-md-12">
                        Buttons patch  here
                    </div>
                    <div class="col-md-6">
                        <h4>Customize Attributes Details</h4>
                         

@using (Ajax.BeginForm("InsertAttributes", "Attributes", new AjaxOptions { HttpMethod = "POST", Confirm = "attributeSaveConfirm", OnSuccess = "attributeSaveSuccess", OnFailure = "attributeSaveFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttributeType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AttributeType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttributeType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSValues, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CSValues, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CSValues, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EntityType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EntityType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EntityType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfigurableYN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ConfigurableYN)
                    @Html.ValidationMessageFor(model => model.ConfigurableYN, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FilterYN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.FilterYN)
                    @Html.ValidationMessageFor(model => model.FilterYN, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MandatoryYN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.MandatoryYN)
                    @Html.ValidationMessageFor(model => model.MandatoryYN, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComparableYN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ComparableYN)
                    @Html.ValidationMessageFor(model => model.ComparableYN, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.Render("~/bundles/attributes")
}

