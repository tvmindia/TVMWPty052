@model PartyEC.UI.Models.ProductViewModel
@{
    ViewBag.Title = "Products";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
   @Styles.Render("~/Content/DataTables/css/datatable")
   @Styles.Render("~/Content/bootstrapdatepicker")
   @Styles.Render("~/Content/DataTables/css/datatableSelect")
   @Styles.Render("~/Content/UserCSS/product")   
   @Styles.Render("~/Content/Uplodify")
   @Styles.Render("~/Content/lightbox")
    <style>
        .uploadify-button {
            background-color: transparent;
            border: none;
            padding: 0;
        }

        .uploadify:hover .uploadify-button {
            background-color: transparent;
        }
        .Selected
        {
            background-color:black;
            opacity:0.4;
        }
        .tab-pane
        {
            
        }
    </style>
}
<div class="container-fluid">
    <div class="panel with-nav-tabs panel-primary">
        <div class="panel-heading">
            <ul class="nav nav-tabs">
                <li id="tabproductList" class="active"><a href="#productList" data-toggle="tab"><i class="fa fa-list">&nbsp;</i> Product List</a></li>
                <li id="tabproductDetails"><a href="#productDetails" data-toggle="tab"><i class="fa fa-file-o">&nbsp;</i> Product Details</a></li>
                <div id="ProductToolBox">

                </div>
                    @*@{
                        PartyEC.UI.Models.ToolboxViewModel ToolBoxControl = new PartyEC.UI.Models.ToolboxViewModel();
                        ToolBoxControl.addbtn.Visible = true;
                        ToolBoxControl.addbtn.Event = "btnAddNewProduct()";
                        ToolBoxControl.addbtn.Title = "Add";
                        ToolBoxControl.backbtn.Visible = true;
                        ToolBoxControl.backbtn.Title = "Back";
                        ToolBoxControl.backbtn.Event = "goback()";

                        Html.RenderPartial("_ToolboxView", ToolBoxControl);
                    }*@

                    @*<li id="tabproductDetails" class="disabled"><a href="#productDetails">Product Details</a></li>*@
                    @*<li class="dropdown">
                <a href="#" data-toggle="dropdown">Dropdown <span class="caret"></span></a>
                <ul class="dropdown-menu" role="menu">
                    <li><a href="#tab4primary" data-toggle="tab">Primary 4</a></li>
                    <li><a href="#tab5primary" data-toggle="tab">Primary 5</a></li>
                </ul>
            </li>*@
</ul>
        </div>
        <div class="panel-body" style="min-height:925px;padding:0px;">
            <div class="tab-content">
                <div class="tab-pane fade in active" id="productList" style="padding:1%">

                    @*<h4>Product List</h4>*@
                    

                    @*table*@
                    <table id="tblproducts" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>AttributeSetId</th>
                                <th>ProductID</th>
                                <th>Name</th>
                                <th>ProductType</th>
                                <th>Active(Yes/No)</th>
                                <th>Supplier</th>
                                <th>SKU</th>
                                <th>Selling Price</th>
                                <th>Qty</th>
                                <th>Stock Status</th>
                                <th>Product Rating</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                    </table>
                    @*table*@
                    <div class="form-group" hidden="hidden">                     
                        <button id="btnmodelproductrating" type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#ModelProductsRating"></button>                   
                    </div>
                </div>
                <div class="tab-pane fade" id="productDetails">
                    <div class="col-md-12" style="padding:0;">
                       
                        @*EditArea*@ 
                        <div class="col-md-2" style="padding:0;">
                            @*<div class="SidebarBlock col-md-12"><i class="fa fa-arrow-down" aria-hidden="true"></i> Configuration</div>*@
                            @*<div class="col-md-12 Sidebar_Party">*@
                                @*<ul class="nav nav-tabs nav-stacked">
                                <li><a href="#Settings" data-toggle="tab" id="tabratingAndReviews">Settings</a></li>
                                </ul>*@


                                @*<div class="col-md-12" style="height:13px"></div>*@
                                @*<div class="SidebarBlock col-md-12"> <i class="fa fa-arrow-down" aria-hidden="true"></i> Product Info</div>
                               <div class="col-md-12 Sidebar_Party">*@
                                <ul class="nav nav-tabs nav-stacked Sidebar_Party" id="LHSNavbarProductDetails" style="min-height:925px;">
                                    <li class="liHead"><a disabled><i class="fa fa-arrow-down" aria-hidden="true"></i> Configuration</a></li>
                                    <li onclick="ShowProductDetalsToolBox()" title="General settings"><a href="#settings" for="settings" data-toggle="tab" id="tabsettings" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Settings <span class="error" title="This tab contains invalid data. Please solve the problem before saving."></span></a></li>
                                    <li class="liHead"><a disabled><i class="fa fa-arrow-down" aria-hidden="true"></i> Product Info</a></li>
                                    <li id="GeneralLI" onclick="ShowProductDetalsToolBox()" class="active"><a href="#general" for="general" data-toggle="tab" id="tabGeneral">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;General <span class="error" title="This tab contains invalid data. Please solve the problem before saving."></span></a></li>
                                    <li onclick="RenderContentForPrice()"><a href="#price" for="price" data-toggle="tab" id="tabPrice">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Price <span class="error" title="This tab contains invalid data. Please solve the problem before saving."></span></a></li>
                                    <li onclick="ShowProductDetalsToolBox()"><a href="#discription" for="discription" data-toggle="tab" id="tabDiscrption">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Description <span class="error" title="This tab contains invalid data. Please solve the problem before saving."></span></a></li>
                                    <li onclick="RenderContentForInventory()"><a href="#inventory" for="inventory" data-toggle="tab" id="tabInventory">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inventory <span class="error" title="This tab contains invalid data. Please solve the problem before saving."></span></a></li>
                                    <li onclick="ShowProductDetalsToolBox()"><a href="#productTags" for="productTags" data-toggle="tab" id="tabproducttags">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Product Tags </a></li>
                                    <li class="liHead" style="display:none;" id="additioanlLi"><a disabled><i class="fa fa-arrow-down" aria-hidden="true"></i> Additional Product Info</a></li>
                                    <li onclick="RenderContentForRelatedProducts()" style="display:none;" id="additioanlRelatedLi"><a href="#relatedProducts" data-toggle="tab" id="tabRelatedProducts">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Related Products</a></li>
                                    <li onclick="RenderContentForImages()" style="display:none;" id="additioanlImageLi"><a href="#images" data-toggle="tab" id="tabImages">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Images</a></li>
                                    <li onclick="RenderContentsForAttributes()" style="display:none;" id="additioanlAttributesLi"><a href="#otherAttributes" data-toggle="tab" id="tabotherAttributes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Other Attributes</a></li>
                                    <li onclick="RenderContentsForAssocProdAttributes()" style="display:none;" id="additioanlProdAttributeLi"><a href="#associatedProducts" data-toggle="tab" id="tabassociatedProducts">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Associated Products</a></li>
                                    <li onclick="BindProductReviews()" style="display:none;" id="additioanlReviewsLi"><a href="#ratingAndReviews" data-toggle="tab" id="tabratingAndReviews">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ratings & Reviews</a></li>
                                   
                                </ul>

                                @*</div>*@
                                @*<div class="col-md-12" style="height:13px"></div>
                                <div class="SidebarBlock col-md-12"> <i class="fa fa-arrow-down"></i> Additional Product Info</div>
                                <div class="col-md-12 Sidebar_Party" style="min-height:500px;">
                                    <ul class="nav nav-tabs nav-stacked" id="LHSNavbarProductDetails">
                                <li onclick="HideProductDetalsToolBox()"><a href="#relatedProducts" data-toggle="tab" id="tabRelatedProducts">Related Products</a></li>
                                <li onclick="RenderContentForImages()"><a href="#images" data-toggle="tab" id="tabImages">Images</a></li>
                                <li onclick="RenderContentsForAttributes()"><a href="#otherAttributes" data-toggle="tab" id="tabotherAttributes">Other Attributes</a></li>
                                <li onclick="RenderContentsForAssocProdAttributes()"><a href="#associatedProducts" data-toggle="tab" id="tabassociatedProducts">Associated Products</a></li>
                                <li onclick="BindProductReviews()"><a href="#ratingAndReviews" data-toggle="tab" id="tabratingAndReviews">Ratings & Reviews</a></li>
                            </ul>

                        </div>*@
                            @*</div>*@
                        </div>
                       
                        <div class="col-md-9">
                            <div class="col-md-12">


                                <h4 style="max-width:50%;padding:1%;">
                                <span class="fa fa-crosshairs " style="font-size: 16px;color: #f46f25;"></span>
                                <span> </span>
                                <span id="titleSpanPro" class="Spantitle"></span>                                
                                </h4>
                                <span style="position: relative;width: 50%;left: 2%;font-weight: 300;color: #ab8571;"><span style="font-weight:700">Type: </span><span id="spandetailType">__</span><span>&nbsp;&nbsp;</span><span style="font-weight:700">Attribute Set: </span><span id="spandetailSet">__</span></span>
                                @*<span id="spandetailSet" style="position: relative;width: 50%;left: 2%;font-weight: 300;color: #ab8571;"></span>*@
                                <hr />

                                <div class="col-md-12">
                                    @using (Ajax.BeginForm("ProductInsertUpdate", "Products", new AjaxOptions { HttpMethod = "POST", OnSuccess = "productSaveSuccess", OnFailure = "productSaveFailure", AllowCache = false, LoadingElementId = "", OnBegin="", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "productform" }))
                                    {
                                        @Html.AntiForgeryToken()

                                        <div class="tab-content productTabContent">
                                            <div class="tab-pane fade" id="settings">
                                              
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                              
                                                <div class="form-group">
                                                    <label for="ProductType" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.ProductType)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        @{
                                                            List<SelectListItem> productTypeList = new List<SelectListItem>();
                                                            productTypeList.Add(new SelectListItem
                                                            { Text = "Configurable", Value = "C" });
                                                            productTypeList.Add(new SelectListItem
                                                            { Text = "Simple", Value = "S" });
                                                        }

                                                        @Html.DropDownListFor(model => model.ProductType, productTypeList, "-- Select Product Type --", new { @class = "form-control", @onchange = "ProductTypeOnChange(this)", value = -1 })
                                                        @Html.HiddenFor(model => model.ProductType, htmlAttributes: new { @class = "control-label col-lg-2", id = "ProductTypehdf", Value = "" })
                                                        @Html.ValidationMessageFor(model => model.ProductType, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.AttributeSetID, htmlAttributes: new { @class = "control-label col-lg-2" })
                                                    <div class="col-lg-4">
                                                        @*@Html.EditorFor(model => model.AttributeSetID, new { htmlAttributes = new { @class = "form-control" } })*@
                                                        @Html.DropDownListFor(model => model.AttributeSetID, Model.AttributeSets, "--Select AttributeSets--", new { @class = "form-control", @onchange = "attributeSetOnChange(this)" })
                                                        @Html.HiddenFor(model => model.AttributeSetID, htmlAttributes: new { @class = "control-label col-lg-2", id = "AttributeSetIDhdf", Value = "" })
                                                        @Html.ValidationMessageFor(model => model.AttributeSetID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="tab-pane fade in active" id="general">
                                                <!--Edit form column-->


                                              
                                                <div class="form-group">
                                                    <label for="Name" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.Name)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-2 productID", Value = "0" })
                                                        @Html.HiddenFor(model => model.ImageID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0" })
                                                        @Html.HiddenFor(model => model.ProductDetailObj.ID, htmlAttributes: new { @class = "control-label col-lg-2", Value = "0", id = "productdetailsID" })
                                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger secGeneral",Value="ST" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="SKU" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.SKU)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="Enabled" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.Enabled)<span class="required">*</span></label>

                                                    <div class="col-lg-4">
                                                        <div>
                                                            @Html.EditorFor(model => model.Enabled)
                                                            @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="Unit" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.Unit)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-lg-2" })
                                                    <div class="col-lg-4">
                                                        @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="ActionType" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.ActionType)<span class="required">*</span></label>

                                                    <div class="col-lg-4">
                                                        @{
                                                            List<SelectListItem> actionTypeList = new List<SelectListItem>();
                                                            actionTypeList.Add(new SelectListItem
                                                            { Text = "Book", Value = "B" });
                                                            actionTypeList.Add(new SelectListItem
                                                            { Text = "Buy", Value = "A" });
                                                            actionTypeList.Add(new SelectListItem
                                                            { Text = "Quotation", Value = "Q" });
                                                        }

                                                        @Html.DropDownListFor(model => model.ActionType, actionTypeList, "-- Select Action Type --", new { @class = "form-control", @onchange = "ActionTypeOnChange()", value = -1 })
                                                        <span><i style="color: grey;">Action Type defines the nature of the product</i></span><br />
                                                        @Html.ValidationMessageFor(model => model.ActionType, "", new { @class = "text-danger" })
                                                       
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="SupplierID" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.SupplierID)<span class="required">*</span></label>

                                                    <div class="col-lg-4">
                                                        @Html.DropDownListFor(model => model.SupplierID, Model.suppliers, "--Select Supplier--", new { @class = "form-control", onchange = "supplierOnChange()", value = -1 })

                                                        @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ManufacturerID, htmlAttributes: new { @class = "control-label col-lg-2" })
                                                    <div class="col-lg-4">
                                                        @Html.DropDownListFor(model => model.ManufacturerID, Model.manufacturers, "--Select Manufacturers--", new { @class = "form-control", onchange = "manufacturerOnChange()", value = -1 })
                                                        @Html.ValidationMessageFor(model => model.ManufacturerID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                           

                                               


                                                <div class="form-group">
                                                    <label for="FreeDelivery" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.FreeDelivery)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        <div>
                                                            @Html.EditorFor(model => model.FreeDelivery)
                                                            @Html.ValidationMessageFor(model => model.FreeDelivery, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>





                                                <div class="form-group" hidden="hidden">
                                                    <div class="col-md-offset-2 col-md-10">

                                                        <input id="btnProductSubmit" type="submit" value="Create" class="btn btn-default" onclick="ConstructproductDetailObject()" />
                                                    </div>
                                                </div>


                                            </div>
                                            <div class="tab-pane fade" id="price">
                                                <div class="col-sm-6 col-md-6 divPriceMessage">
                                                    <div class="alert-message alert-message-warning">
                                                        <p>Please Select Product Type in Settings that you want to work with!</p>
                                                    </div>
                                                </div>
                                                <div class="form-group">

                                                    <label for="CostPrice" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.CostPrice)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.CostPrice, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="BaseSellingPrice" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.BaseSellingPrice)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        @Html.EditorFor(model => model.BaseSellingPrice, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.BaseSellingPrice, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="ShowPrice" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.ShowPrice)<span class="required">*</span></label>

                                                    <div class="col-lg-4">
                                                        <div>
                                                            @Html.EditorFor(model => model.ShowPrice)
                                                            @Html.ValidationMessageFor(model => model.ShowPrice, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.TaxClass, htmlAttributes: new { @class = "control-label col-lg-2" })
                                                    <div class="col-lg-4">
                                                        @*@Html.EditorFor(model => model.TaxClass, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })*@
                                                        <span class="form-control" disabled>N/A</span>
                                                        @*@Html.ValidationMessageFor(model => model.TaxClass, "", new { @class = "text-danger" })*@
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <div class="col-sm-6 col-md-6 divMsgconfigurable">
                                                        <div class="alert-message alert-message-warning">
                                                            <p>For Configurable products, Discount info can be filled through product option section.</p>
                                                        </div>
                                                    </div>
                                                    @Html.LabelFor(model => model.DiscountAmount, htmlAttributes: new { @class = "control-label col-lg-2 productDetailGroup" })
                                                    <div class="col-lg-4">
                                                        @Html.EditorFor(model => model.DiscountAmount, new { htmlAttributes = new { @class = "form-control productDetailGroup" } })
                                                        @Html.ValidationMessageFor(model => model.DiscountAmount, "", new { @class = "text-danger productDetailGroup" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.DiscountStartDate, htmlAttributes: new { @class = "control-label col-lg-2 productDetailGroup" })
                                                    <div class="col-lg-4">

                                                        @Html.EditorFor(model => model.DiscountStartDate, new { htmlAttributes = new { @class = "form-control productDetailGroup" } })
                                                        @Html.ValidationMessageFor(model => model.DiscountStartDate, "", new { @class = "text-danger productDetailGroup" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.DiscountEndDate, htmlAttributes: new { @class = "control-label col-lg-2 productDetailGroup" })
                                                    <div class="col-lg-4">
                                                        @Html.EditorFor(model => model.DiscountEndDate, new { htmlAttributes = new { @class = "form-control productDetailGroup" } })
                                                        @Html.ValidationMessageFor(model => model.DiscountEndDate, "", new { @class = "text-danger productDetailGroup" })
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="tab-pane fade" id="discription">
                                                <div class="form-group">
                                                    <label for="ShortDescription" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.ShortDescription)<span class="required">*</span></label>
                                                    <div class="col-lg-8">
                                                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="LongDescription" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.LongDescription)<span class="required">*</span></label>
                                                    <div class="col-lg-8">
                                                        @Html.TextAreaFor(model => model.LongDescription, new { @class = "form-control", @rows = 20, placeholder = "Rich text allowed here.." })
                                                        @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="tab-pane fade" id="inventory">
                                                <div class="col-sm-6 col-md-6 divInventoryMessage">
                                                    <div class="alert-message alert-message-warning">
                                                        <p>Please Select Product Type in General that you want to work with!</p>
                                                    </div>
                                                </div>
                                                <div class="form-group" id="inventoryStock">
                                                    @*<div class="col-sm-6 col-md-6 divMsgconfigurable">
                                                        <div class="alert-message alert-message-warning">
                                                            <p>For Configurable products, inventory section is available in 'Associated products' tab.</p>
                                                        </div>
                                                    </div>*@
                                                    <label for="StockAvailable" class="control-label col-lg-2">@Html.DisplayNameFor(model => model.StockAvailable)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        <div>
                                                            @*@Html.EditorFor(model => model.StockAvailable)
                                                            @Html.ValidationMessageFor(model => model.StockAvailable, "", new { @class = "text-danger" })*@

                                                            @Html.ValidationMessageFor(model => model.StockAvailable, "", new { @class = "text-danger" })
                                                            @{
                                                                List<SelectListItem> listItems = new List<SelectListItem>();
                                                                listItems.Add(new SelectListItem
                                                                { Text = "Out of Stock", Value ="false" });
                                                                listItems.Add(new SelectListItem
                                                                { Text = "In Stock", Value ="true" });
                                                            }
                                                            @Html.DropDownListFor(model => model.StockAvailable, listItems, "-- Select Stock Status--", new { @class = "form-control" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group" id="inventoryQty">
                                                    <label for="Qty" class="control-label col-lg-2 productDetailGroup">@Html.DisplayNameFor(model => model.Qty)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control productDetailGroup",@Value = 0 } })
                                                        @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger productDetailGroup" })
                                                    </div>
                                                </div>
                                                <div class="form-group" id="inventoryAlertQty">
                                                    <label for="OutOfStockAlertQty" class="control-label col-lg-2 productDetailGroup">@Html.DisplayNameFor(model => model.OutOfStockAlertQty)<span class="required">*</span></label>
                                                    <div class="col-lg-4">
                                                        @Html.EditorFor(model => model.OutOfStockAlertQty, new { htmlAttributes = new { @class = "form-control productDetailGroup", @Value = 0 } })
                                                        @Html.ValidationMessageFor(model => model.OutOfStockAlertQty, "", new { @class = "text-danger productDetailGroup" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="tab-pane fade" id="productTags">
                                                @* <div class="col-lg-8">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.HeaderTags, htmlAttributes: new { @class = "control-label col-lg-2" })
                                    <div class="col-lg-6" id="headertagsdiv">
                                        @Html.EditorFor(model => model.HeaderTags, new { htmlAttributes = new { @class = "form-control" } })

                                            <button class="btn btn-default input-group-btn" type="button">Go!</button>

                                        @Html.ValidationMessageFor(model => model.HeaderTags, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div><!-- /.col-lg-6 -->*@

                                                <div class="col-lg-8">
                                                    @Html.LabelFor(model => model.HeaderTags, htmlAttributes: new { @class = "control-label col-lg-2" })
                                                    <div class="input-group">
                                                        @Html.HiddenFor(model => model.HeaderTags, new { htmlAttributes = new { @class = "form-control", placeholder = "Add key Words....." } })
                                                        <input id="HeaderTagsPicker" type="text" class="form-control" placeholder="Add key Words.....">
                                                        <span class="input-group-btn">
                                                            <button class="btn btn-default" type="button">+</button>
                                                        </span>
                                                    </div><!-- /input-group -->
                                                </div><!-- /.col-lg-8 -->
                                                <br />
                                                <br />

                                                <div class="col-lg-8">
                                                    <div class="col-lg-2"></div>
                                                    <div id="keywordsDiv" class="input-group">

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="tab-pane fade" id="relatedProducts">

                                             <div class="container-fluid">
                                                 <div class="row" id="divtablerelatedproducts">
                                                     @*table*@
                                                     <table id="tblRelatedproducts" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                                                         <thead>
                                                             <tr>
                                                                 <th></th>
                                                                 <th>ProductID</th>
                                                                 <th>Name</th>
                                                                 <th>ProductType</th>
                                                                 <th>Active(Yes/No)</th>
                                                                 <th>Supplier</th>
                                                                 <th>SKU</th>
                                                                 <th>Selling Price</th>
                                                                 <th>Qty</th>
                                                                 <th>Stock Status</th>

                                                             </tr>
                                                         </thead>
                                                     </table>
                                                     @*table*@
                                                     <div class="form-group" hidden="hidden">
                                                         <div class="col-md-offset-2 col-md-10">

                                                             <button id="btnmodelrelproduct" type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#ModelRelatedProducts"></button>

                                                         </div>
                                                     </div>
                                                 </div>
                                                 <div class="col-sm-6 col-md-6 divMsgconfigurable">
                                                     <div class="alert-message alert-message-warning">
                                                         <p>First save the product...</p>
                                                     </div>
                                                 </div>
                                             </div>
                              

                                            

                                            </div>
                                            <div class="tab-pane fade" id="images">
                                                

                                                <div class="col-lg-12">

                                                    <h2>Product Main Image</h2>
                                                    <hr />
                                                    <div class="col-md-5" id="divImageUpload">
                                                        <div>
                                                            <a id="alinkUpload" style="display:none" class="btn btn-info" href="javascript:$('#file_upload').uploadify('upload','*')">Upload</a>
                                                            <input type="file" class="uploadify" name="file_upload" id="file_upload" />

                                                        </div>
                                                        <div id="uploaded">
                                                        </div>
                                                        <div class="overlay" id="divOverlayimage" style="display:none;">
                                                            <div class="uploadify-button  disabled" title="Save Category to enable file browse" style="height: 30px; line-height: 30px; width: 120px;margin-left:1.55%;cursor:not-allowed;"><span class="uploadify-button-text">SELECT FILES</span></div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-7" style="object-fit:fill;">
                                                        <div class="col-lg-12" id="divMainImagePro">
                                                            <img src=@Url.Content("~/Content/images/NoImageFound.png") alt="" id="imgProduct" class="img-thumbnail" style="max-height:250px;margin-left:3%">

                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12">
                                                    <h2>Product Additional Images</h2>
                                                    <hr />
                                                    
                                                    @*<div id="buttonPatchOtherImages">
                                                        @{
                                                    PartyEC.UI.Models.ToolboxViewModel ToolBoxControlOtherImage = new PartyEC.UI.Models.ToolboxViewModel();
                                                    ToolBoxControlOtherImage.deletebtn.Visible = true;
                                                    ToolBoxControlOtherImage.deletebtn.Disable = true;
                                                    Html.RenderPartial("_ToolboxView", ToolBoxControlOtherImage);
                                                        }

                                                    </div>*@
                                                    
                                                    <div class="col-md-5" id="divImageUploadOther">
                                                        <div>
                                                            <a id="alinkUploadOther" style="display:none" class="btn btn-info" href="javascript:$('#file_uploadOther').uploadify('upload','*')">Upload</a>
                                                            <input type="file" class="uploadify" name="file_uploadOther" id="file_uploadOther" />

                                                        </div>
                                                        <div id="uploaded">
                                                        </div>
                                                        <div class="overlay" id="divOverlayimageOther" style="display:none;">
                                                            <div class="uploadify-button  disabled" title="Save Category to enable file browse" style="height: 30px; line-height: 30px; width: 120px;margin-left:1.55%;cursor:not-allowed;"><span class="uploadify-button-text">SELECT FILES</span></div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-7" style="object-fit:fill;">
                                                        <div class="col-lg-12">
                                                            <ul class="hide-bullets" id="ulOtherImages"></ul>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="col-lg-12">
                                                    <h2>Stickers</h2>
                                                    <hr />
                                                    @*<div id="buttonPatchStickerImages">
                                                        @{
                                                    PartyEC.UI.Models.ToolboxViewModel ToolBoxControlStickerImage = new PartyEC.UI.Models.ToolboxViewModel();
                                                    ToolBoxControlStickerImage.savebtn.Visible = true;
                                                    ToolBoxControlStickerImage.savebtn.Disable = true;
                                                    ToolBoxControlStickerImage.deletebtn.Visible = true;
                                                    ToolBoxControlStickerImage.deletebtn.Event = "UpdateStickerForProduct()";
                                                    ToolBoxControlStickerImage.deletebtn.Title = "Delete";
                                                    Html.RenderPartial("_ToolboxView", ToolBoxControlStickerImage);
                                                        }

                                                    </div>*@
                                                    <div class="col-lg-12">
                                                        <span class="Stickerbtn" id="myButton" data-toggle="modal" data-target="#ModelStickers" style="background-color: rgb(0, 88, 151); border-radius: 31px; border: 1px solid rgb(0, 88, 151); display: inline-block; cursor: pointer; color: rgb(255, 255, 255); font-family: Arial; font-size: 15px; font-weight: bold; padding: 3px 23px; text-decoration: none; text-shadow: rgb(9, 20, 2) 0px 1px 0px;">+ Existing</span>
                                                        <p style="font-style:italic;font-family:cursive;margin-top:1%">(Add sticker from Available)</p>
                                                    </div>
                                                    <div class="col-lg-5">
                                                        <div>
                                                            <a id="alinkUploadSticker" style="display:none" class="btn btn-info" href="javascript:$('#file_uploadSticker').uploadify('upload','*')">Upload</a>
                                                            <input type="file" class="uploadify" name="file_uploadOther" id="file_uploadSticker" />
                                                            <p style="font-style:italic;font-family:cursive;">(Add sticker as New)</p>

                                                        </div>
                                                        <div id="uploaded">
                                                        </div>
                                                        <div class="overlay" id="divOverlayimageSticker" style="display:none;">
                                                            <div class="uploadify-button  disabled" title="Save Category to enable file browse" style="height: 30px; line-height: 30px; width: 120px;margin-left:1.55%;cursor:not-allowed;"><span class="uploadify-button-text">SELECT FILES</span></div>
                                                        </div>

                                                    </div>
                                                    <div class="col-lg-7">
                                                        <div class="col-lg-12">
                                                            @*<h3>Attached Sticker</h3>
                                                            <hr />*@
                                                            <ul class="hide-bullets" id="ulMainStickerArea"></ul>
                                                        </div>
                                                        @* ----------------------------------------------------------------------------- *@
                                                        @*<div class="col-lg-12">
                                                            <h3>Available Stickers</h3>
                                                            <hr />
                                                            <ul class="hide-bullets" id="ulStickerArea"></ul>
                                                        </div>*@

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="tab-pane fade" id="otherAttributes">
                                                @*<div>
                                @{
                                    PartyEC.UI.Models.ToolboxViewModel ToolBoxControlforOtherAttr = new PartyEC.UI.Models.ToolboxViewModel();
                                    ToolBoxControlforOtherAttr.savebtn.Visible = true;
                                    ToolBoxControlforOtherAttr.savebtn.Title = "Save";
                                    ToolBoxControlforOtherAttr.savebtn.Event = "OtherAttributeSave()";
                                    ToolBoxControlforOtherAttr.backbtn.Visible = true;
                                    ToolBoxControlforOtherAttr.backbtn.Title = "Back";
                                    ToolBoxControlforOtherAttr.backbtn.Event = "goback()";
                                    Html.RenderPartial("_ToolboxView", ToolBoxControlforOtherAttr);
                                }

                            </div>*@

                                                <div id="dynamicOtherAttributes">
                                                    <div class="col-sm-6 col-md-6">
                                                        <div class="alert-message alert-message-warning">

                                                            <p>Please Create a product from general section and come back:).</p>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="tab-pane fade" id="associatedProducts">

                                                <div class="container-fluid">
                                                    <div class="row" id="DivtblAssociatedProducts">
                                                        @*table*@
                                                        <table id="tblAssociatedProducts" class="table table-striped table-bordered table-hover" cellspacing="0">
                                                            <thead>
                                                                <tr>
                                                                    <th>Product detail ID</th>
                                                                    <th>Name</th>
                                                                    <th>Options</th>
                                                                    <th>Base selling price</th>
                                                                    <th>Price difference</th>
                                                                    <th>Actual price</th>
                                                                    <th>Actions</th>
                                                                </tr>
                                                            </thead>
                                                        </table>
                                                        @*table*@
                                                    </div>

                                                </div>

                                                <div class="container-fluid">
                                                    <div class="row">
                                                        <div id="dynamicAssociatedProducts">
                                                            <div class="form-group">
                                                                <div class="col-sm-6 col-md-6">
                                                                    <div class="alert-message alert-message-warning">
                                                                        <p>Please Create a product from general section and come back:).</p>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                        <div id="associatedStaticfields">

                                                            <div class="form-group">
                                                                <label for=detailQty class="col-lg-2 control-label">Qty<span class="required">*</span></label>
                                                                <div class="col-lg-4 input-group">
                                                                    <input type="text" class="form-control" onkeypress="return isNumber(event)" id="detailQty" name="detailQty">
                                                                    <span id="errorQty" style="color: Red; display: none">Qty is Required</span>
                                                                    <input type="hidden" class="form-control" id="productDetailID" name="productDetailID" />
                                                                </div>
                                                            </div>

                                                            <div class="form-group">
                                                                <label for=detailOutOfStockAlertQty class="col-lg-2 control-label">Reorder Alert Qty<span class="required">*</span></label>
                                                                <div class="col-lg-4 input-group">
                                                                    <input type="text" class="form-control" onkeypress="return isNumber(event)" id="detailOutOfStockAlertQty" name="detailOutOfStockAlertQty">
                                                                    <span id="errorAlertQty" style="color: Red; display: none">Reorder Alert Qty is Required</span>
                                                                </div>
                                                            </div>


                                                            <div class="form-group">
                                                                <label class="control-label col-lg-2" for="detailStockAvailable" style="">Stock Status<span class="required">*</span></label>
                                                                <div class="col-lg-4 input-group">
                                                                    <div>
                                                                        @Html.ValidationMessageFor(model => model.StockAvailable, "", new { @class = "text-danger" })
                                                                        @{
                                                                            List<SelectListItem> listItems1 = new List<SelectListItem>();
                                                                            listItems1.Add(new SelectListItem
                                                                            { Text = "Out of Stock", Value = "false" });
                                                                            listItems1.Add(new SelectListItem
                                                                            { Text = "In Stock", Value = "true" });
                                                                        }
                                                                        @Html.DropDownListFor(model => model.StockAvailable, listItems1, "-- Select Stock Status--", new { @class = "form-control",id="AssociatedStockAvailabe" })
                                                                      
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="form-group">
                                                                <label class="control-label col-lg-2" for="detailDiscountAmount">Discount Price</label>
                                                                <div class="col-lg-4 input-group">
                                                                    <input class="form-control text-box single-line" id="detailDiscountAmount" name="detailDiscountAmount" value="" type="text">
                                                                </div>
                                                            </div>

                                                            <div class="form-group">
                                                                <label class="control-label col-lg-2" for="detailPriceDifference">Price Difference</label>
                                                                <div class="col-lg-4 input-group">
                                                                    <input class="form-control text-box single-line" id="detailPriceDifference" name="detailPriceDifference" value="" type="text">
                                                                </div>
                                                            </div>

                                                            <div class="form-group">
                                                                <label class="control-label col-lg-2" for="detailDiscountStartDate" style="">Discount Start Date</label>
                                                                <div class="col-lg-4 input-group">
                                                                    <input class="form-control text-box single-line datepicker" id="detailDiscountStartDate" name="detailDiscountStartDate" value="" type="text">
                                                                </div>
                                                            </div>

                                                            <div class="form-group">
                                                                <label class="control-label col-lg-2" for="detailDiscountEndDate" style="">Discount End Date</label>
                                                                <div class="col-lg-4 input-group">
                                                                    <input class="form-control text-box single-line datepicker" id="detailDiscountEndDate" name="detailDiscountEndDate" value="" type="text">
                                                                </div>
                                                            </div>



                                                            <div class="form-group">
                                                                <label class="control-label col-lg-2" for="detailEnable" style="">Enable</label>
                                                                <div class="col-lg-4 input-group">
                                                                    <div>
                                                                        <input class="check-box" data-val="true" id="detailEnable" name="detailEnable" value="true" type="checkbox">
                                                                        <input name="detailEnable" value="false" type="hidden">
                                                                    </div>
                                                                </div>
                                                            </div>


                                                            <div class="form-group">
                                                                <label class="control-label col-lg-2" for="detailDefaultOption" style="">Default Option</label>
                                                                <div class="col-lg-4 input-group">
                                                                    <div>
                                                                        <input class="check-box" data-val="true" id="detailDefaultOption" name="detailDefaultOption" value="true" type="checkbox">
                                                                        <input name="detailDefaultOption" value="false" type="hidden">
                                                                    </div>
                                                                </div>
                                                            </div>


                                                            <div class="form-group">
                                                                <label class="control-label col-lg-2" id="lblDetailTags" for="detailTagsPicker" style="">New Tags</label>
                                                                <div class="col-lg-4 input-group" id="detailTagsdiv">
                                                                    <input class="form-control text-box single-line" id="detailTagsPicker" placeholder="Add key Words....." name="detailTagsPicker" value="" type="text">
                                                                    <input id="detailDetailTags" value="" type="hidden">
                                                                    <span class="input-group-btn">
                                                                        <button class="btn btn-default" type="button">+</button>
                                                                    </span>
                                                                </div>
                                                            </div>





                                                            <div class="form-group">
                                                                <span class="col-lg-2"></span>

                                                                <div id="detailkeywordsDiv" class="col-lg-4">

                                                                </div>
                                                            </div>

                                                        </div>
                                                        </div>
                                                    </div>
                                            </div>
                                            <div class="tab-pane fade" id="ratingAndReviews">
                                                <div id="RatingDisplay" class="well well-sm">
                                                    <div class="row">
                                                        <div class="col-xs-12 col-md-6 text-center">
                                                            <h1 class="rating-num">
                                                                0.0
                                                            </h1>
                                                            <div class="rating">
                                                                <span class="glyphicon glyphicon-star-empty"></span>
                                                                <span class="glyphicon glyphicon-star-empty"></span>
                                                                <span class="glyphicon glyphicon-star-empty"></span>
                                                                <span class="glyphicon glyphicon-star-empty"></span>
                                                                <span class="glyphicon glyphicon-star-empty"></span>
                                                            </div>
                                                            <div>
                                                                <span class="glyphicon glyphicon-user"></span>0 total
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div id="ReviewsDisplay" class="col-sm-7">
                                                        <h2>
                                                            No Reviews Yet
                                                        </h2>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        @Html.HiddenFor(model => model.productDetailhdf)
                                        }
                                </div>
                            </div>
                        </div>
                    </div>
                   
                   
                 </div>
            </div>
        </div>
    </div>

</div>

@*------------------------------------------Models-----------------------------------------------------------*@
<div id="ModelRelatedProducts" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="gridSystemModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="gridSystemModalLabel">Add More Products</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    @*<div class="col-md-4">Albert Thomson</div>
                    <div class="col-md-4 col-md-offset-4">CCCCCCCCCCCCCCCCCCCCC</div>*@
                    <div class="col-md-12">
                        @*buttonpatch*@
                        <div>
                            @{
                                PartyEC.UI.Models.ToolboxViewModel ToolBoxControlforModel = new PartyEC.UI.Models.ToolboxViewModel();
                                ToolBoxControlforModel.savebtn.Visible = true;
                                ToolBoxControlforModel.savebtn.Title = "Save";
                                ToolBoxControlforModel.savebtn.Event = "CallbtnRelatedProductSubmit()";
                                Html.RenderPartial("_ToolboxView", ToolBoxControlforModel);
                            }

                        </div>
                        @*table*@
                        <table id="tblUNRelatedproducts" class="table table-striped table-bordered table-hover" cellspacing="0">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>ProductID</th>
                                    <th>Name</th>
                                    <th>ProductType</th>
                                    <th>Active(Yes/No)</th>
                                    <th>Supplier</th>
                                    <th>SKU</th>
                                    <th>Selling Price</th>
                                    <th>Qty</th>
                                    <th>Stock Status</th>
                                  
                                </tr>
                            </thead>
                        </table>
                        @*table*@
                    </div>
                      
                </div>
           </div>
@using (Ajax.BeginForm("RelatedProductsInsert", "Products", new AjaxOptions { HttpMethod = "POST", OnSuccess = "RelatedproductSaveSuccess", OnFailure = "productSaveFailure", AllowCache = false, LoadingElementId = "" }, new { @class = "form-horizontal", role = "form", id = "relatedproductform" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IDList, htmlAttributes: new { @class = "control-label col-lg-2 IDList", Value = "0" })
    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-2 productID",id= "productID", Value = "0" })
    <div class="form-group" hidden="hidden">
        <div class="col-md-offset-2 col-md-10">

            <input id="btnRelatedProductSubmit" type="submit" value="Create" class="btn btn-default" onclick="ConstructRelatdProductIDList()" />
        </div>
    </div>


}
            @*<div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>*@
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@* ----------------------------------------------Product sticker assign *@
<div id="ModelStickers" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="gridSystemModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Assign Sticker</h4>
            </div>
            <div class="col-lg-12">
                @*<h3>Available Stickers</h3>
                <hr />*@
                <div class="w3-note w3-panel" style="margin-top:1%;">
                    <p><strong>Tip:</strong><br> Click and select the sticker for adding to products.</p>
                </div>
                <ul class="hide-bullets" id="ulStickerArea"></ul>
            </div>
            <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" id="Savesticker" class="btn btn-primary">Save changes</button>
                </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@*--------------------------------------Product Rating Form------------------------------------------------------------------*@
<div id="ModelProductsRating" class="modal fade" tabindex="-1" role="dialog" style="left:50%; top:45%" aria-labelledby="gridSystemModalLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="titleProductRating">Product Ratings</h4>
            </div>
            <div class="modal-body">
                <div id="RatingPopupDisplay" class="row"> 

                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@*--------------------------------------DeleteForm------------------------------------------------------------------*@
@using (Ajax.BeginForm("DeleteRelatedProducts", "Products", new AjaxOptions { HttpMethod = "POST",OnBegin = "return ValidateTableSelection()", OnSuccess = "RelatedproductDeleteSuccess", OnFailure = "productSaveFailure", AllowCache = false, LoadingElementId = "" }, new { @class = "form-horizontal", role = "form", id = "relatedproductDeleteform" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IDList, htmlAttributes: new { @class = "control-label col-lg-2 IDList",id="relatedproductlistID", Value = "0" })
    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-2 productID", id = "productIDInDelete", Value = "0" })
    <div class="form-group" hidden="hidden">
        <div class="col-md-offset-2 col-md-10">
            <input id="btnDeleteRelatedProductSubmit" type="submit" value="Create" class="btn btn-default" onclick="ConstructRelatdProductIDListForDelete()" />
        </div>
    </div>
}


@section Scripts {
@Scripts.Render("~/bundles/datatable")
@Scripts.Render("~/bundles/jqueryunobtrusiveajaxvalidate")
@Scripts.Render("~/bundles/bootstrapdatepicker")
@Scripts.Render("~/bundles/product")
@Scripts.Render("~/bundles/AssoProduct")
@Scripts.Render("~/bundles/Uploadify")
@Scripts.Render("~/bundles/Lightbox")
<script type="text/javascript">
    $(function () {
        $('#file_upload').uploadify({
            'auto': false,
            'formData': {
                'Name': '','ID':'','ImageID':''
            },
            'buttonImage': '/Content/images/browse-btn.png',
            'fileTypeDesc': 'Image Files',
            'fileTypeExts': '*.jpg; *.png',
            'swf': '/Content/uploadify.swf',
            //this is where the file posts when it uploads.
            'uploader': "@Url.Action("UploadProductImage", "Products")",
            'onSelect': function (file) {
                $('#alinkUpload').show();
            },
            'onUploadStart': function (file) {
                $('#file_upload').uploadify('settings', 'formData', { 'Name': $('#Name').val(), 'ID': $('#ID').val(), 'ImageID': $('#ImageID').val() });
            },
            'multi': false,
                'onUploadSuccess': function (file, data, response) {
                  //data is whatever you return from the server
                  //we're sending the URL from the server so we append this as an image to the #uploaded div
                //$('#URL').val(data);
                    //$('#imgProduct').attr({ 'src': (data + '?' + new Date().getTime()), 'width': '100%' });
                    BindImages();

                    $('#alinkUpload').hide();
                }

        });
        $('#file_uploadOther').uploadify({
            'auto': false,
            'formData': {
                'Name': '','ID':'','ImageID':''
            },
            'buttonImage': '/Content/images/browse-btn.png',
            'fileTypeDesc': 'Image Files',
            'fileTypeExts': '*.jpg; *.png',
            'swf': '/Content/uploadify.swf',
                //this is where the file posts when it uploads.
            'uploader': "@Url.Action("UploadOtherImages", "Products")",
            'onSelect': function (file) {
                $('#alinkUploadOther').show();
            },
            'onUploadStart': function (file) {
                $('#file_uploadOther').uploadify('settings', 'formData', { 'Name': $('#Name').val(), 'ID': $('#ID').val(), 'ImageID': $('#ImageID').val() });
            },
                'onUploadSuccess': function (file, data, response) {
                    //data is whatever you return from the server
                    //we're sending the URL from the server so we append this as an image to the #uploaded div
                    //$('#URL').val(data);
                    //$('#imgCategory').attr({ 'src': (data + '?' + new Date().getTime()), 'width': '100%' });
                    BindImages();
                    $('#alinkUploadOther').hide();
                }

        });
        $('#file_uploadSticker').uploadify({
            'auto': false,
            'formData': {
                'Name': '','ID':'','ImageID':''
            },
            'fileTypeDesc': 'Image Files',
            'fileTypeExts': '*.jpg; *.png',
            'buttonImage': '/Content/images/browse-btn.png',
            'swf': '/Content/uploadify.swf',
                //this is where the file posts when it uploads.
            'uploader': "@Url.Action("UploadStickerImages", "Products")",
            'onSelect': function (file) {
                $('#alinkUploadSticker').show();
            },
            'onUploadStart': function (file) {
                $('#file_uploadOther').uploadify('settings', 'formData', { 'Name': $('#Name').val(), 'ID': $('#ID').val(), 'ImageID': $('#ImageID').val() });
            },
                'onUploadSuccess': function (file, data, response) {
                    //data is whatever you return from the server
                    //we're sending the URL from the server so we append this as an image to the #uploaded div
                    //$('#URL').val(data);
                    //$('#imgCategory').attr({ 'src': (data + '?' + new Date().getTime()), 'width': '100%' });
                    BindStickers();
                    $('#alinkUploadSticker').hide();
                }

    });

    });

</script>
}






