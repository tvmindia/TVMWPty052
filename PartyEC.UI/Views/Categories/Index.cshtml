@model PartyEC.UI.Models.CategoriesViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.Render("~/Content/DataTables/css/datatable")
    @Styles.Render("~/Content/jstree/default/jstreecss")
    @Styles.Render("~/Content/Uplodify")
<style>
        .uploadify-button {
        background-color: transparent;
        border: none;
        padding: 0;
    }
    .uploadify:hover .uploadify-button {
        background-color: transparent;
    }
</style>
}

<div class="container-fluid">
    <div class="panel with-nav-tabs panel-primary">
        <div class="panel-heading">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tab1primary" data-toggle="tab" onclick="TabRedirect()"><i class="fa fa-list">&nbsp;</i>General Information</a></li>
                <li><a href="#tab2CategoryProducts" data-toggle="tab" id="tabCategoryTable" onclick="GetAssignedPro();"><i class="fa fa-file-o">&nbsp;</i>Category Products</a></li>
            </ul>
        </div>

        <div class="panel-body">
            <div class="col-lg-3" style="position: relative;left: -2.4%;">
                <h4>..</h4>
                @*<hr />*@
                <label id="lblHead" style="display:none;font-size:large;"></label>
                    <div class="col-lg-12 panel panel-default panel-info" style="background: antiquewhite!important;border-right: 2px solid grey;">
                        <div class="panel-body" id="jstree_Categories" style="background: antiquewhite!important;min-height: 968px;">


                        </div>
                        <div class="overlay" id="divOverlay" style="display:none;background:white;">
                            <img src="~/Content/OtherImages/Cake.png" id="imgDefaultCat" style="object-fit:cover;width:100%;height:100%"/>
                        </div>
                    </div>
                
            </div>
            <div class="tab-content">
                <ol class="breadcrumb" id="olCategory" style="position:absolute;">
                    <li><a href="#"><i class="fa fa fa-list"></i></a></li>
                </ol>
                <div style="min-height:55px;">
                    <div class="" id="btnPatchAttributeSettab">
                        @{
                            PartyEC.UI.Models.ToolboxViewModel ToolBoxControltab = new PartyEC.UI.Models.ToolboxViewModel();
                            ToolBoxControltab.addbtn.Visible = true;
                            ToolBoxControltab.addbtn.Title = "Add";
                            ToolBoxControltab.deletebtn.Visible = true;
                            ToolBoxControltab.deletebtn.Disable = true;
                            ToolBoxControltab.savebtn.Visible = true;
                            ToolBoxControltab.savebtn.Event="MainClick()";
                            ToolBoxControltab.savebtn.Title = "Save";
                            ToolBoxControltab.addsubbtn.Visible = true;
                            ToolBoxControltab.addsubbtn.Disable = true;

                            Html.RenderPartial("_ToolboxView", ToolBoxControltab);
                        }
                    </div>
                </div>
                <div class="tab-pane fade in active col-lg-9" id="tab1primary">


                    @using (Ajax.BeginForm("SaveOrUpdateCategory", "Categories", new AjaxOptions { HttpMethod = "POST", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "CheckSubmittedInsertCategory" }, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                       

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", style="min-height:100px" } })
                                   
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Filter, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-lg-10">
                                    <div class="checkbox">
                                        <div>
                                            @Html.EditorFor(model => model.Filter)
                                            @Html.ValidationMessageFor(model => model.Filter, "", new { @class = "text-danger" })
                                        </div>

                                    </div>

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Navigation, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-lg-10">
                                    <div class="checkbox">
                                        <div>
                                            @Html.EditorFor(model => model.Navigation)
                                            @Html.ValidationMessageFor(model => model.Navigation, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Enable, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-lg-10">
                                    <div class="checkbox">
                                        <div>
                                            @Html.EditorFor(model => model.Enable)
                                            @Html.ValidationMessageFor(model => model.Enable, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="" id="images">
                                <div class="col-lg-12">
                                    <hr />
                                    <div class="col-md-12" id="divImageUpload">
                                            <div>
                                                <a id="alinkUpload" style="display:none" class="btn btn-info" href="javascript:$('#file_upload').uploadify('upload','*')">Upload</a>
                                                <input type="file" class="uploadify" name="file_upload" id="file_upload" />
                                                
                                            </div>
                                            <div id="uploaded">
                                            </div>
                                        <div class="overlay" id="divOverlayimage" style="display:none;">
                                            <div class="uploadify-button  disabled" title="Save Category to enable file browse" style="height: 30px; line-height: 30px; width: 120px;margin-left:1.55%;cursor:not-allowed;"><span class="uploadify-button-text">SELECT FILES</span></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-12" style="object-fit:fill;">
                                        <img src=@Url.Content("~/Content/images/NoImageFound.png") alt="" id="imgCategory" width="100%">
                                    </div>
                                </div>
                                </div>
                                <div class="form-group" style="display:none;">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" id="btnFormSave"/>
                                        @Html.HiddenFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0" })
                                        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0" })
                                        @Html.HiddenFor(model=>model.ImageID, htmlAttributes: new { @class = "control-label col-md-4", Value = "" })
                                        @Html.HiddenFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-4", Value = "" })
                                    </div>
                                </div>
                            </div>
                    }
                    <div id="CategoryDelete" hidden="hidden">
                        @using (Ajax.BeginForm("DeleteCategory", "Categories", new AjaxOptions { HttpMethod = "POST", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "CheckSubmittedDeleteCategory" }, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-actions no-color">
                                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0", id = "hdnDeleteCatID" })
                                <input id="btnFormDeleteCategory" type="submit" value="Delete" class="btn btn-default" />
                            </div>
                        }
                    </div>
                </div>
                <div class="tab-pane fade col-lg-9" id="tab2CategoryProducts">
                    <form class="form-horizontal" role="form" style="position:absolute;width:86%;left:17%;">

                        <div class="form-group">
                            <label class="col-sm-1 control-label"></label>
                            <div class="col-sm-8">
                                <label class="radio-inline"> <input type="radio" name="product" id="rdoproductAssigned" onclick="GetAssignedPro();" value="Assigned" checked>Assigned Products</label>
                                <label class="radio-inline"> <input type="radio" name="product" id="rdoproductUnAssigned" onclick="GetUnAssignedPro();" value="UnAssigned">UnAssigned Products</label>
                                <label class="radio-inline"> <input type="radio" name="product" id="rdoproductAll" onclick="GetAllPro();" value="All">All Products</label>
                            </div>
                        </div>
                        </form>

                        @*table*@
                        <table id="tblCategoryProduct" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%" style="margin-top:4%">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>ProductID</th>
                                    <th>Name</th>
                                    <th>Active</th>
                                    <th>Supplier</th>
                                    <th>SKU</th>
                                    <th>SellingPrice</th>
                                    <th>Qty</th>
                                    <th>StockStatus</th>
                                    <th>Position</th>
                                </tr>
                            </thead>

                        </table>
                    <div id="attributeSetDelete" hidden="hidden">
                        @using (Ajax.BeginForm("AddorRemoveLinks", "Categories", new AjaxOptions { HttpMethod = "POST", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "CheckSubmittedDelete" }, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-actions no-color">
                                @Html.HiddenFor(model => model.TableDataAdd, htmlAttributes: new { @class = "control-label col-md-4", Value = "", id = "hdnTableDataAdd" })
                                 @Html.HiddenFor(model => model.TableDataDelete, htmlAttributes: new { @class = "control-label col-md-4", Value = "", id = "hdnTableDataDelete" })
                                <input id="btnFormTableData" onclick="AddProductLink()" type="submit" value="Delete" class="btn btn-default" />
                            </div>
                        }
                    </div>
                    <div id="categoryLinkUpdate" hidden="hidden">
                        @using (Ajax.BeginForm("UpdatePositionNo", "Categories", new AjaxOptions { HttpMethod = "POST", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "CheckSubmittedDelete" }, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-actions no-color">
                                <input type="submit" value="Create" class="btn btn-default" id="btnFormUpdateOrder" />
                                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0", id = "hdnOrderRowid" })
                                @Html.HiddenFor(model=>model.ProductID,htmlAttributes: new { @class = "control-label col-md-4", Value = "0", id = "hdnProductID" })
                                @Html.HiddenFor(model => model.PositionNo, htmlAttributes: new { @class = "control-label col-md-4", Value = "", id = "hdnOrderValue" })
                            </div>
                        }
                    </div>

</div>
                </div>
            </div>
        </div>
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/jqueryunobtrusiveajaxvalidate")
    @*@Scripts.Render("~/bundles/jstreeScript")*@
    <script src="~/Scripts/jstree/dist/jstree.js"></script>
    @Scripts.Render("~/bundles/Categories")
    @Scripts.Render("~/bundles/Uploadify")
    <script type="text/javascript">
    $(function () {
        $('#file_upload').uploadify({
            'auto': false,
            'formData': {
                'Name': '','ID':'','ImageID':''
            },
            'buttonImage': '/Content/images/browse-btn.png',
            'fileTypeDesc': 'Image Files',
            'fileTypeExts': '*.jpg; *.png',
            'swf': '/Content/uploadify.swf',
                //this is where the file posts when it uploads.
            'uploader': "@Url.Action("Upload", "Categories")",
            'onSelect': function (file) {
                $('#alinkUpload').show();
            },
            'onUploadStart': function (file) {
                $('#file_upload').uploadify('settings', 'formData', { 'Name': $('#Name').val(), 'ID': $('#ID').val(), 'ImageID': $('#ImageID').val() });
            },
            'multi': false,
                'onUploadSuccess': function (file, data, response) {
                  //data is whatever you return from the server
                  //we're sending the URL from the server so we append this as an image to the #uploaded div
                //$('#URL').val(data);
                    $('#imgCategory').attr({ 'src': (data + '?' + new Date().getTime()), 'width': '100%' });
                $('#alinkUpload').hide();
                }

        });

    });

</script>
}
